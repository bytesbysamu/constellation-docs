"use strict";(self.webpackChunkconstellation_docs=self.webpackChunkconstellation_docs||[]).push([[924],{7161:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"getting-started","title":"\ud83d\ude80 Quick Start Guide","description":"Welcome to Constellation! This guide will help you set up and run Constellation locally. You\'ll find instructions on requirements, setup, and how to run each service individually or all at once.","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/","permalink":"/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"slug":"/","sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"\ud83c\udfd7\ufe0f Project Architecture Overview","permalink":"/project-structure-overview"}}');var i=s(4848),r=s(8453);const o={slug:"/",sidebar_position:1},c="\ud83d\ude80 Quick Start Guide",t={},d=[{value:"Requirements",id:"requirements",level:2},{value:"Running Constellation Using Docker Compose",id:"running-constellation-using-docker-compose",level:2},{value:"<strong>Option 1: Run All Services Together</strong>",id:"option-1-run-all-services-together",level:3},{value:"<strong>Option 2: Run Backend Services Only</strong>",id:"option-2-run-backend-services-only",level:3},{value:"<strong>Option 3: Run Frontend Services Only</strong>",id:"option-3-run-frontend-services-only",level:3},{value:"Environment Configuration",id:"environment-configuration",level:2},{value:"Service Ports and Access",id:"service-ports-and-access",level:2},{value:"Running Each Service Individually",id:"running-each-service-individually",level:2},{value:"1. <strong>Database (Backend)</strong>",id:"1-database-backend",level:3},{value:"2. <strong>Backend (Server)</strong>",id:"2-backend-server",level:3},{value:"3. <strong>Frontend (Frontend)</strong>",id:"3-frontend-frontend",level:3},{value:"4. <strong>AI Service (Ollama)</strong>",id:"4-ai-service-ollama",level:3},{value:"5. <strong>Documentation (Docs)</strong>",id:"5-documentation-docs",level:3},{value:"Development Workflow",id:"development-workflow",level:2},{value:"<strong>Full-Stack Development</strong>",id:"full-stack-development",level:3},{value:"<strong>Backend-Only Development</strong>",id:"backend-only-development",level:3},{value:"<strong>Frontend-Only Development</strong>",id:"frontend-only-development",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"<strong>Port Conflicts</strong>",id:"port-conflicts",level:3},{value:"<strong>Database Connection Issues</strong>",id:"database-connection-issues",level:3},{value:"<strong>Frontend-Backend Communication</strong>",id:"frontend-backend-communication",level:3},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"-quick-start-guide",children:"\ud83d\ude80 Quick Start Guide"})}),"\n",(0,i.jsxs)(n.p,{children:["Welcome to ",(0,i.jsx)(n.strong,{children:"Constellation"}),"! This guide will help you set up and run Constellation locally. You'll find instructions on requirements, setup, and how to run each service individually or all at once."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsx)(n.p,{children:"Before you begin, ensure you have the following tools installed on your system:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.docker.com/",children:"Docker"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.docker.com/compose/",children:"Docker Compose"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://nodejs.org/",children:"Node.js"})," (for frontend development)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.npmjs.com/",children:"NPM"})," (for frontend development)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.oracle.com/java/technologies/javase/jdk21-archive-downloads.html",children:"Java 21"})," (for backend development)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://gradle.org/",children:"Gradle"})," (Backend application includes a Gradle wrapper, so no installation is required)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"running-constellation-using-docker-compose",children:"Running Constellation Using Docker Compose"}),"\n",(0,i.jsx)(n.h3,{id:"option-1-run-all-services-together",children:(0,i.jsx)(n.strong,{children:"Option 1: Run All Services Together"})}),"\n",(0,i.jsx)(n.p,{children:"To run all services together, you'll need to start both backend and frontend:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Terminal 1 - Backend Services\ncd backend\ndocker-compose up\n\n# Terminal 2 - Frontend Services  \ncd frontend\ndocker-compose up\n"})}),"\n",(0,i.jsx)(n.h3,{id:"option-2-run-backend-services-only",children:(0,i.jsx)(n.strong,{children:"Option 2: Run Backend Services Only"})}),"\n",(0,i.jsx)(n.p,{children:"To run only the backend services (API, database, AI service):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd backend\ndocker-compose up\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will start:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Backend (constellation-server)"})," - Spring Boot API"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database (constellation-db)"})," - PostgreSQL database"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AI Service (constellation-ollama)"})," - Ollama AI service"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"option-3-run-frontend-services-only",children:(0,i.jsx)(n.strong,{children:"Option 3: Run Frontend Services Only"})}),"\n",(0,i.jsx)(n.p,{children:"To run only the frontend services:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd frontend\ndocker-compose up\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will start:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Frontend (constellation-frontend)"})," - Ionic/Angular application"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["Before running, ensure you have the necessary environment variables set up. Copy the example ",(0,i.jsx)(n.code,{children:".env"})," file to create your configuration:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Backend environment\ncd backend\ncp .env.example .env\n\n# Frontend environment (if needed)\ncd frontend\ncp .env.local.example .env.local\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"service-ports-and-access",children:"Service Ports and Access"}),"\n",(0,i.jsx)(n.p,{children:"When running all services, they will be accessible on their respective ports:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Frontend"}),": ",(0,i.jsx)(n.code,{children:"http://localhost:4200"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Backend API"}),": ",(0,i.jsx)(n.code,{children:"http://localhost:8081/api"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database"}),": ",(0,i.jsx)(n.code,{children:"localhost:5432"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AI Service"}),": ",(0,i.jsx)(n.code,{children:"http://localhost:11434"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Documentation"}),": ",(0,i.jsx)(n.code,{children:"http://localhost:3000"})," (if running docs separately)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"running-each-service-individually",children:"Running Each Service Individually"}),"\n",(0,i.jsxs)(n.h3,{id:"1-database-backend",children:["1. ",(0,i.jsx)(n.strong,{children:"Database (Backend)"})]}),"\n",(0,i.jsx)(n.p,{children:"To start the PostgreSQL database:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd backend\ndocker-compose up constellation-db -d\n"})}),"\n",(0,i.jsx)(n.p,{children:"This launches the database container in detached mode."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h3,{id:"2-backend-server",children:["2. ",(0,i.jsx)(n.strong,{children:"Backend (Server)"})]}),"\n",(0,i.jsx)(n.p,{children:"The backend is a Spring Boot application. To run it locally using IntelliJ IDEA:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Open your project in IntelliJ IDEA."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["In the toolbar, click on ",(0,i.jsx)(n.code,{children:"Run"})," -> ",(0,i.jsx)(n.code,{children:"Edit Configurations"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click on the ",(0,i.jsx)(n.code,{children:"+"})," button to create a new configuration."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select ",(0,i.jsx)(n.code,{children:"Spring Boot"})," as the configuration type."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Check the Enable EnvFile checkbox and add the path to the .env file in the table below."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.code,{children:"Apply"})," and then ",(0,i.jsx)(n.code,{children:"OK"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Now you can run the backend by clicking on the ",(0,i.jsx)(n.code,{children:"Run"})," button."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The backend will be accessible at ",(0,i.jsx)(n.code,{children:"http://localhost:8081"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": Make sure the EnvFile plugin is installed and enabled in your IntelliJ IDEA."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Alternative"}),": Run via Docker Compose"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd backend\ndocker-compose up constellation-server\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h3,{id:"3-frontend-frontend",children:["3. ",(0,i.jsx)(n.strong,{children:"Frontend (Frontend)"})]}),"\n",(0,i.jsx)(n.p,{children:"The frontend is an Ionic/Angular application. To run it locally:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Navigate to the ",(0,i.jsx)(n.code,{children:"frontend"})," directory:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd frontend\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Install dependencies:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Start the development server:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ng serve\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The frontend will be accessible at ",(0,i.jsx)(n.code,{children:"http://localhost:4200"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Alternative"}),": Run via Docker Compose"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd frontend\ndocker-compose up\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h3,{id:"4-ai-service-ollama",children:["4. ",(0,i.jsx)(n.strong,{children:"AI Service (Ollama)"})]}),"\n",(0,i.jsx)(n.p,{children:"To start the Ollama AI service:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd backend\ndocker-compose up constellation-ollama -d\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This launches the Ollama container in detached mode, accessible at ",(0,i.jsx)(n.code,{children:"http://localhost:11434"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h3,{id:"5-documentation-docs",children:["5. ",(0,i.jsx)(n.strong,{children:"Documentation (Docs)"})]}),"\n",(0,i.jsx)(n.p,{children:"The documentation is built using Docusaurus. To run it locally:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Navigate to the ",(0,i.jsx)(n.code,{children:"docs"})," directory:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd docs\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Install dependencies:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Start the development server:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm start\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The documentation will be accessible at ",(0,i.jsx)(n.code,{children:"http://localhost:3000"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,i.jsx)(n.h3,{id:"full-stack-development",children:(0,i.jsx)(n.strong,{children:"Full-Stack Development"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Start backend services: ",(0,i.jsx)(n.code,{children:"cd backend && docker-compose up -d"})]}),"\n",(0,i.jsxs)(n.li,{children:["Start frontend services: ",(0,i.jsx)(n.code,{children:"cd frontend && docker-compose up -d"})]}),"\n",(0,i.jsxs)(n.li,{children:["Access frontend at ",(0,i.jsx)(n.code,{children:"http://localhost:4200"})]}),"\n",(0,i.jsxs)(n.li,{children:["Frontend will automatically proxy API calls to backend at ",(0,i.jsx)(n.code,{children:"http://localhost:8081"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"backend-only-development",children:(0,i.jsx)(n.strong,{children:"Backend-Only Development"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Start database: ",(0,i.jsx)(n.code,{children:"cd backend && docker-compose up constellation-db -d"})]}),"\n",(0,i.jsx)(n.li,{children:"Run Spring Boot application in your IDE"}),"\n",(0,i.jsxs)(n.li,{children:["Access API at ",(0,i.jsx)(n.code,{children:"http://localhost:8081/api"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"frontend-only-development",children:(0,i.jsx)(n.strong,{children:"Frontend-Only Development"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Ensure backend is running or update ",(0,i.jsx)(n.code,{children:"frontend/.env.local"})," with backend URL"]}),"\n",(0,i.jsxs)(n.li,{children:["Run ",(0,i.jsx)(n.code,{children:"ng serve"})," in frontend directory"]}),"\n",(0,i.jsxs)(n.li,{children:["Access at ",(0,i.jsx)(n.code,{children:"http://localhost:4200"})]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"port-conflicts",children:(0,i.jsx)(n.strong,{children:"Port Conflicts"})}),"\n",(0,i.jsx)(n.p,{children:"If you encounter port conflicts:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Check which services are using the ports: ",(0,i.jsx)(n.code,{children:"lsof -i :8081"})," or ",(0,i.jsx)(n.code,{children:"lsof -i :4200"})]}),"\n",(0,i.jsx)(n.li,{children:"Stop conflicting services or change ports in docker-compose files"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"database-connection-issues",children:(0,i.jsx)(n.strong,{children:"Database Connection Issues"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ensure PostgreSQL container is running: ",(0,i.jsx)(n.code,{children:"docker ps | grep constellation-db"})]}),"\n",(0,i.jsxs)(n.li,{children:["Check environment variables in ",(0,i.jsx)(n.code,{children:".env"})," file"]}),"\n",(0,i.jsxs)(n.li,{children:["Verify database health: ",(0,i.jsx)(n.code,{children:"docker-compose exec constellation-db pg_isready"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"frontend-backend-communication",children:(0,i.jsx)(n.strong,{children:"Frontend-Backend Communication"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Verify backend is running and accessible at ",(0,i.jsx)(n.code,{children:"http://localhost:8081/api"})]}),"\n",(0,i.jsx)(n.li,{children:"Check CORS configuration in backend"}),"\n",(0,i.jsx)(n.li,{children:"Ensure environment variables are properly set in frontend"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(n.p,{children:"Once you have the basic services running, you can:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Explore the API"}),": Visit ",(0,i.jsx)(n.code,{children:"http://localhost:8081/api"})," to see available endpoints"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test Authentication"}),": Use the frontend to register/login users"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Configure External Services"}),": Set up SendGrid, Stripe, and Google OAuth2"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Explore AI Features"}),": Test Ollama integration at ",(0,i.jsx)(n.code,{children:"http://localhost:11434"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"For detailed configuration of external services, see the respective documentation sections."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var l=s(6540);const i={},r=l.createContext(i);function o(e){const n=l.useContext(r);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);