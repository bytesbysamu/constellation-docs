"use strict";(self.webpackChunkconstellation_docs=self.webpackChunkconstellation_docs||[]).push([[545],{7033:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>a,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"cicd","title":"\ud83d\udd04 CI/CD Pipeline","description":"---","source":"@site/docs/cicd.md","sourceDirName":".","slug":"/cicd","permalink":"/cicd","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udee0\ufe0f Development Setup Guide","permalink":"/development-setup"},"next":{"title":"\ud83d\udd10 Authentication & Security","permalink":"/auth"}}');var r=i(4848),l=i(8453);const d={sidebar_position:4},t="\ud83d\udd04 CI/CD Pipeline",o={},c=[{value:"Workflow Overview",id:"workflow-overview",level:2},{value:"Backend CI/CD Pipeline",id:"backend-cicd-pipeline",level:2},{value:"Trigger Conditions",id:"trigger-conditions",level:3},{value:"Feature Flags (Inputs)",id:"feature-flags-inputs",level:3},{value:"Jobs",id:"jobs",level:3},{value:"Additional Jobs",id:"additional-jobs",level:2},{value:"Changes Detection",id:"changes-detection",level:3},{value:"Docker Compose",id:"docker-compose",level:3},{value:"Deployment",id:"deployment",level:3},{value:"Secrets",id:"secrets",level:2},{value:"<strong>Current Architecture</strong>",id:"current-architecture",level:2},{value:"<strong>Repository Structure</strong>",id:"repository-structure",level:3},{value:"<strong>CI/CD Independence</strong>",id:"cicd-independence",level:3},{value:"<strong>Benefits of Current Structure</strong>",id:"benefits-of-current-structure",level:3},{value:"<strong>Workflow Files</strong>",id:"workflow-files",level:2},{value:"<strong>Main Workflow</strong>",id:"main-workflow",level:3},{value:"<strong>Reusable Workflows</strong>",id:"reusable-workflows",level:3},{value:"<strong>Removed Workflows</strong>",id:"removed-workflows",level:3},{value:"<strong>Integration Notes</strong>",id:"integration-notes",level:2},{value:"<strong>What Changed</strong>",id:"what-changed",level:3},{value:"<strong>Current State</strong>",id:"current-state",level:3},{value:"<strong>Deployment Coordination</strong>",id:"deployment-coordination",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"-cicd-pipeline",children:"\ud83d\udd04 CI/CD Pipeline"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"workflow-overview",children:"Workflow Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The CI/CD workflow is focused on the ",(0,r.jsx)(n.strong,{children:"Backend CI/CD Pipeline"})," only. The frontend has its own independent CI/CD pipeline in the separate frontend repository."]}),"\n",(0,r.jsxs)(n.p,{children:["The main workflow is defined in the ",(0,r.jsx)(n.code,{children:"cicd.yml"})," file and leverages the reusable workflow:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"pipeline-ci-backend.yml"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"backend-cicd-pipeline",children:"Backend CI/CD Pipeline"}),"\n",(0,r.jsx)(n.h3,{id:"trigger-conditions",children:"Trigger Conditions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Triggered on ",(0,r.jsx)(n.code,{children:"push"})," and ",(0,r.jsx)(n.code,{children:"pull_request"})," events to the ",(0,r.jsx)(n.code,{children:"main"})," branch."]}),"\n",(0,r.jsxs)(n.li,{children:["Monitors changes in the following paths:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"server/**"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"docker-compose.yml"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:".github/workflows/*-backend.yml"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"feature-flags-inputs",children:"Feature Flags (Inputs)"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Input"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"BACKEND_COMPILE_ENABLED"}),(0,r.jsx)(n.td,{children:"Enable compile job"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"BACKEND_CHECKSTYLE_ENABLED"}),(0,r.jsx)(n.td,{children:"Enable checkstyle job"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"BACKEND_UNIT_TESTS_ENABLED"}),(0,r.jsx)(n.td,{children:"Enable unit tests job"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"BACKEND_BUILD_ENABLED"}),(0,r.jsx)(n.td,{children:"Enable build job"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"jobs",children:"Jobs"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Compile"})," (compiles gradle application)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Checkstyle"})," (runs checkstyle analysis)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Unit tests"})," (runs unit tests)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build"})," (build Spring Boot application)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"additional-jobs",children:"Additional Jobs"}),"\n",(0,r.jsx)(n.h3,{id:"changes-detection",children:"Changes Detection"}),"\n",(0,r.jsx)(n.p,{children:"Identifies whether changes occurred in backend paths."}),"\n",(0,r.jsx)(n.h3,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,r.jsx)(n.p,{children:"Builds and starts backend services using Docker Compose if changes are detected."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Input"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DOCKER_COMPOSE_ENABLED"}),(0,r.jsx)(n.td,{children:"Enable Docker Compose job"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DEPLOY_ENABLED"}),(0,r.jsx)(n.td,{children:"Enable Coolify deployment job"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"deployment",children:"Deployment"}),"\n",(0,r.jsxs)(n.p,{children:["Triggers deployment to Coolify (two ",(0,r.jsx)(n.code,{children:"SECRET"})," variables are needed: ",(0,r.jsx)(n.code,{children:"COOLIFY_WEBHOOK"})," and ",(0,r.jsx)(n.code,{children:"COOLIFY_TOKEN"}),")."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"secrets",children:"Secrets"}),"\n",(0,r.jsx)(n.p,{children:"The workflows rely on the following secrets:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"COOLIFY_WEBHOOK"}),": URL for triggering deployment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"COOLIFY_TOKEN"}),": Authorization token for Coolify."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"current-architecture",children:(0,r.jsx)(n.strong,{children:"Current Architecture"})}),"\n",(0,r.jsx)(n.h3,{id:"repository-structure",children:(0,r.jsx)(n.strong,{children:"Repository Structure"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend Repository"}),": Independent Spring Boot API with backend-only CI/CD"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frontend Repository"}),": Independent Ionic/Angular app with its own CI/CD pipeline"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integration"}),": Both repos can run independently while maintaining API connectivity"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"cicd-independence",children:(0,r.jsx)(n.strong,{children:"CI/CD Independence"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend"}),": Uses ",(0,r.jsx)(n.code,{children:"pipeline-ci-backend.yml"})," only"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frontend"}),": Has independent CI (",(0,r.jsx)(n.code,{children:"ci.yml"}),") and CD (",(0,r.jsx)(n.code,{children:"cicd.yml"}),") pipelines in its own repository"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No Cross-Repository Dependencies"}),": Each repository manages its own CI/CD independently"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"benefits-of-current-structure",children:(0,r.jsx)(n.strong,{children:"Benefits of Current Structure"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Independent Development"}),": Backend and frontend teams can work independently"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Focused Pipelines"}),": Each repository has optimized CI/CD for its specific technology stack"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Faster Builds"}),": No waiting for cross-repository dependencies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Easier Maintenance"}),": Simpler pipeline configuration and debugging"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Technology-Specific Optimization"}),": Backend uses Gradle/Java tools, frontend uses Node.js/Angular tools"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"workflow-files",children:(0,r.jsx)(n.strong,{children:"Workflow Files"})}),"\n",(0,r.jsx)(n.h3,{id:"main-workflow",children:(0,r.jsx)(n.strong,{children:"Main Workflow"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cicd.yml"})," - Main orchestrator workflow that triggers backend CI/CD"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"reusable-workflows",children:(0,r.jsx)(n.strong,{children:"Reusable Workflows"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pipeline-ci-backend.yml"})," - Backend-specific CI/CD pipeline"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"removed-workflows",children:(0,r.jsx)(n.strong,{children:"Removed Workflows"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pipeline-ci-frontend.yml"})," - Moved to frontend repository"]}),"\n",(0,r.jsxs)(n.li,{children:["Frontend-related jobs in main ",(0,r.jsx)(n.code,{children:"cicd.yml"})," - Moved to frontend repository"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"integration-notes",children:(0,r.jsx)(n.strong,{children:"Integration Notes"})}),"\n",(0,r.jsx)(n.h3,{id:"what-changed",children:(0,r.jsx)(n.strong,{children:"What Changed"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Architecture"}),": Monorepo \u2192 Multi-repository"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CI/CD"}),": Single orchestrator \u2192 Independent pipelines"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frontend"}),": Moved to separate repository with enhanced CI/CD"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend"}),": Now backend-only, removed frontend dependencies"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"current-state",children:(0,r.jsx)(n.strong,{children:"Current State"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend"}),": Uses ",(0,r.jsx)(n.code,{children:"pipeline-ci-backend.yml"})," only"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frontend"}),": Has independent CI (",(0,r.jsx)(n.code,{children:"ci.yml"}),") and CD (",(0,r.jsx)(n.code,{children:"cicd.yml"}),") pipelines"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integration"}),": Both repos can run independently while maintaining API connectivity"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"deployment-coordination",children:(0,r.jsx)(n.strong,{children:"Deployment Coordination"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend"}),": Deploys to backend services via Coolify"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frontend"}),": Deploys to frontend services via its own pipeline"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Coordination"}),": Services communicate via Docker networking and environment variables"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>t});var s=i(6540);const r={},l=s.createContext(r);function d(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);